exit
params[:site_id]
params
exit
params
param
continue
params["data"]
params
get_current_user
continue
new_hash["site_data"] = 0
new_hash["site_data"] 
new_hash["site_reference_id"]
new_hash["user_id"]
new_hash
new_hash = hash
hash
continue
user
continue
            return new_hash
            new_hash[:site_data] = API.get_site(hash["site_reference_id"])
            new_hash = hash
user.saved_sites.map do |hash|
            return new_hash
            new_hash[:site_data] = API.get_site(hash.site_reference_id)
            new_hash = hash
user.saved_sites.map do |hash|
            return new_hash
            new_hash["site_data"] = API.get_site(hash.site_reference_id)
            new_hash = hash
saved_sites_with_site_data = user.saved_sites.map do |hash|
continue
user
continue
        saved_sites_with_site_data = user.saved_sites.each{ |saved_site| saved_site["site_data"] =API.get_site(saved_site.site_reference_id) }
saved_sites_with_site_data = user.saved_sites.each{ |saved_site| saved_site["site_data"] =API.get_site(site_reference_id) }
continue
saved_sites.each{ |site| site << site["site_details"] = API.get_site(site.site_reference_id)}
saved_sites.each{ |site| site["site_details"] = API.get_site(site.site_reference_id)}
saved_sites.each{ |site| site["site_details"] = API.get_site(site.site_reference_id); site }
 saved_sites = user.saved_sites
continue
user.saved_sites
continue
user
continue
user.saved_sites.first
user.saved_sites
user
continue
 sites = site_reference_ids.map{ |id| API.get_site(id) }
 site_reference_ids = user.saved_sites.map{ |site| site.site_reference_id }
        user = User.find_by(id: params[:id])
 saved_sites = SavedSite.all.select{ |site| site.user_id == params[:id] }
params[:id]
continue
[response.body]
response.body
response
reponse
continue
response.body
response
continue
id
continue
response
continue
id
continue
site = SiteReference.find_by(site_id: params[:id])
params[:id]
exit
continue
id
continue
response
continue
Unirest.get(url)
url
continue
exit
response
url
exit
eit
continue
exit
continue
contineu
continue
response.body
response
response.body
response
continue
Unirest.get(url).body
Unirest.get(url)
        )
            url
        response = Unirest.get(
url
response
continue
site.id
site
continue
site.id
      site = SiteReference.find_by(site_id: params[:id])
continue
response.body
response.bpdy
response
continue
site
 reponse = API.get_site(site.id)
params[:id]
exit
contine
continue
 site = SiteReference.find_by(site_id: params[:id])
continue
new_user
continue
new_user
continue
params[:email]
params
continue
params
continue
     response = site_ids.map{ |id| API.get_site(id) }
site_ids
continue
response.length
response
continue
site_ids
continue
user
exit
continue
request
continue
      user_id = decode_token['id']
continue
      user_id = decode_token['id']
   user_id = decode_token['id']
continue
JWT.encode(data, secret).first
JWT.encode(data, secret)
data
continue
exit
sites.first['id']
sites.first['id"]
sites.first[id]
sites.first.id
sites.first
sites
continue
response.body[0]
response.body
continue
response.body.class
JSON.parse(response.body)
response.body
response
exit
response.body
response
exit
response
continue
parsed
continue
object.first
object
continue
parsed
