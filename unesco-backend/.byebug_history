continue
contineu
site
continue
params["tag"]
params
continue
exit
continue
Tag.all
SiteReferenceTag.all
continue
site["image_url"]
site_reference
site
continue
sites.length
 sites = SiteReference.all.select{ |site_reference| site_reference.tags.map{|tag| tag.name }.include?(params[:tag]) }
["hello", "Roman"].include?(params[:tag])
params[:tag]
params
sites
sites = SiteReference.all.select{ |site_reference| site_reference.tags.include?(params[:tag]) }
sites.first.tags.includes("Roman")
sites.first.tags
sites.first
sites.length
sites
exit
continue
site
site["tags"] = site_reference.tags.map{|tag| tag.name }
site_reference.tags.map{|tag| tag.name }
   site_reference = SiteReference.find_by(site_id: site["id"])
0:             site_reference = SiteReference.find_by(site_id: site["id"])
site
exit
response.first
response.length
response.all
response.first
response.first["tags"] = ["Mining town", "Church", "Ancient", "Ruins", "Forest", "Trees", "Architecture", "Cities", "Building", "Landmark", "Waterfall", "Nature", "Mountain", "Adventure", "Roman"]
response.first
response.length
response
exit
SiteReferenceTag.all
Tag.all
get_tags(site["image_url"], site_reference.first)
continue
site
get_tags(site["image_url"], site_reference.first)
exit
get_tags(site["image_url"], site_reference.first)
site["image_url"]
site = API.get_site(site_reference.first.site_id)
site_reference
exit
site_a["image_url"]
site_a
exit
label.description
label
get_tags(site_a["image_url"])
image_annotator
get_tags(site_a["image_url"])
site_a = API.get_site(sites.first.site_id)
 53: site_a = API.get_site(sites.first.site_id)
exit
get_tags( site_a = API.get_site(sites.first.site_id))
site_a["image_url"]
get_tags(site_a["image_url"])
site_a
 site_a = API.get_site(sites.first.site_id)
get_tags(site_a["image_url"])
 site_a = API.get_site(sites.first.site_id)
exit
get_tags(site_a["image_url"])
site_a["image_url"]
site_a.image_url
site_b = API.get_site(sites.second.site_id)
 site_a = API.get_site(sites.first.site_id)
sites
continue
site_a
exit
contnue
continue
response.sample(4)
response
continue
response.sample(4)
response
continue
response
continue
response
continue
params[:query]
continue
params[:query]
params
continue
user_bucketlist
continue
User.all
user.destroy!
user.detroy
user
user = User.create(first_name: "HEY")
params[:site_id]
continue
new_user_bucketlist
continue
        )
            site_reference_id: site_reference.id
            user_id: user.id, 
        new_user_bucketlist = UserBucketlist.create(
        )
            site_reference_id: site_reference.id
            user_id: user.id, 
        new_user_bucketlist = UserBucketlist.create(
API.get_site(628)
Site.find_by(id: 628)
        site_reference = SiteReference.find_by(site_id: params[:site_id])
        user = get_current_user
params[:site_id]
params
continue
params[:site_id]
params[:id]
SiteReference.find_by(id: params[:site_id])
Site.find_by(id: params[:site_id])
params[:site_id]
params
continue
site_reference_bucketlists
continue
params[:id]
exit
params[:site_id]
params
exit
params
param
continue
params["data"]
params
get_current_user
continue
new_hash["site_data"] = 0
new_hash["site_data"] 
new_hash["site_reference_id"]
new_hash["user_id"]
new_hash
new_hash = hash
hash
continue
user
continue
            return new_hash
            new_hash[:site_data] = API.get_site(hash["site_reference_id"])
            new_hash = hash
user.saved_sites.map do |hash|
            return new_hash
            new_hash[:site_data] = API.get_site(hash.site_reference_id)
            new_hash = hash
user.saved_sites.map do |hash|
            return new_hash
            new_hash["site_data"] = API.get_site(hash.site_reference_id)
            new_hash = hash
saved_sites_with_site_data = user.saved_sites.map do |hash|
continue
user
continue
        saved_sites_with_site_data = user.saved_sites.each{ |saved_site| saved_site["site_data"] =API.get_site(saved_site.site_reference_id) }
saved_sites_with_site_data = user.saved_sites.each{ |saved_site| saved_site["site_data"] =API.get_site(site_reference_id) }
continue
saved_sites.each{ |site| site << site["site_details"] = API.get_site(site.site_reference_id)}
saved_sites.each{ |site| site["site_details"] = API.get_site(site.site_reference_id)}
saved_sites.each{ |site| site["site_details"] = API.get_site(site.site_reference_id); site }
 saved_sites = user.saved_sites
continue
user.saved_sites
continue
user
continue
user.saved_sites.first
user.saved_sites
user
continue
 sites = site_reference_ids.map{ |id| API.get_site(id) }
 site_reference_ids = user.saved_sites.map{ |site| site.site_reference_id }
        user = User.find_by(id: params[:id])
 saved_sites = SavedSite.all.select{ |site| site.user_id == params[:id] }
params[:id]
continue
[response.body]
response.body
response
reponse
continue
response.body
response
continue
id
continue
response
continue
id
continue
site = SiteReference.find_by(site_id: params[:id])
params[:id]
exit
continue
id
continue
response
continue
Unirest.get(url)
url
continue
exit
response
url
exit
eit
continue
exit
continue
contineu
continue
response.body
response
response.body
response
continue
Unirest.get(url).body
Unirest.get(url)
        )
            url
        response = Unirest.get(
url
response
continue
site.id
site
continue
site.id
      site = SiteReference.find_by(site_id: params[:id])
continue
response.body
response.bpdy
response
continue
site
